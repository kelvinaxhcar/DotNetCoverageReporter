name: .NET CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v2

      - name: Configurar SDK do .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.x'

      - name: Instalar ferramenta ReportGenerator globalmente
        run: |
          dotnet tool install -g dotnet-reportgenerator-globaltool --version 5.3.7
          if [ $? -ne 0 ]; then
            echo "Falha ao instalar dotnet-reportgenerator-globaltool"
            exit 1
          fi

      - name: Compilar projeto
        run: dotnet build --configuration Release $(find . -name ProjetoDeTeste.csproj)

      - name: Executar testes com cobertura
        run: dotnet test --configuration Release --collect:"XPlat Code Coverage" $(find . -name ProjetoDeTeste.csproj)

      - name: Encontrar o arquivo de cobertura mais recente
        id: find-coverage-file
        run: |
          testResultsDir=$(find . -name ProjetoDeTeste.csproj -printf "%h\n")/TestResults
          echo "Listando conteúdos do diretório TestResults:"
          ls -R $testResultsDir
          coverageFiles=$(find $testResultsDir -name 'coverage.cobertura.xml')
          if [ -z "$coverageFiles" ]; then
            echo 'Arquivo de cobertura não encontrado.'
            exit 1
          fi
          reportInput=$(ls -t $coverageFiles | head -n1)
          echo "::set-output name=reportInput::$reportInput"
          echo "Arquivo de cobertura mais recente encontrado: $reportInput"

      - name: Gerar relatório HTML
        id: generate-report
        run: |
          reportInput=${{ steps.find-coverage-file.outputs.reportInput }}
          reportOutput=$(find . -name ProjetoDeTeste.csproj -printf "%h\n")/Reports
          ~/.dotnet/tools/reportgenerator "-reports:$reportInput" "-targetdir:$reportOutput" "-reporttypes:HTML"
          echo "::set-output name=reportOutput::$reportOutput"

      - name: Desinstalar ferramenta ReportGenerator
        run: dotnet tool uninstall -g dotnet-reportgenerator-globaltool

      - name: Fazer upload do relatório de cobertura
        uses: actions/upload-artifact@v2
        with:
          name: cobertura-relatorio
          path: ${{ steps.generate-report.outputs.reportOutput }}
