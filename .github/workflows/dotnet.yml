name: .NET CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.x'

      - name: Install ReportGenerator tool
        run: |
          dotnet tool install -g dotnet-reportgenerator-globaltool --version 4.8.8 --tool-path $(find . -name ProjetoDeTeste.csproj -printf "%h\n" | head -n 1)/tools
          if [ $? -ne 0 ]; then
            echo "Failed to install dotnet-reportgenerator-globaltool"
            exit 1
          fi

      - name: Build project
        run: dotnet build --configuration Release $(find . -name ProjetoDeTeste.csproj)

      - name: Run tests with coverage
        run: dotnet test --configuration Release --collect:"XPlat Code Coverage" $(find . -name ProjetoDeTeste.csproj)

      - name: Find latest coverage file
        run: |
          testResultsDir=$(find . -name ProjetoDeTeste.csproj -printf "%h\n" | head -n 1)/TestResults
          coverageFiles=$(find $testResultsDir -name 'coverage.cobertura.xml')
          if [ -z "$coverageFiles" ]; then
            echo 'Coverage file not found.'
            exit 1
          fi
          reportInput=$(ls -t $coverageFiles | head -n1)

      - name: Generate HTML report
        run: |
          reportOutput=$(find . -name ProjetoDeTeste.csproj -printf "%h\n" | head -n 1)/Reports
          dotnet reportgenerator "-reports:$reportInput" "-targetdir:$reportOutput" "-reporttypes:HTML"

      - name: Move directories
        run: |
          mv $(find . -name ProjetoDeTeste.csproj -printf "%h\n" | head -n 1)/TestResults $(System.DefaultWorkingDirectory)/destination
          mv $(find . -name ProjetoDeTeste.csproj -printf "%h\n" | head -n 1)/Reports $(System.DefaultWorkingDirectory)/destination

      - name: Uninstall ReportGenerator tool
        run: dotnet tool uninstall -g dotnet-reportgenerator-globaltool

      - name: Open report in browser
        run: |
          indexFile=$(System.DefaultWorkingDirectory)/destination/Reports/index.html
          if [ -f "$indexFile" ]; then
            echo 'Opening report in browser...'
            xdg-open file://$indexFile
          else
            echo "File $indexFile not found."
          fi
